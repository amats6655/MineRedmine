@model Redmine.Net.Api.Types.Issue

<h1 align="center">Заявка #@Model.Id</h1>
<br/>
<section class="wrapper">
    <div class="container">
        <div class="detail bg-light mb-3" style="box-shadow: 0 0 10px 2px @GetStatusColor();">
            <div class="card-body">
                <p><strong>Создано: </strong>@Model.CreatedOn.ToString()</p>
                <p><strong>Приоритет: </strong>@Model.Priority.Name</p>
                <p><strong>Заявитель: </strong>@Model.Author.Name</p>
                <p class="card-text text-wrap"><strong>Тема: </strong>@Model.Subject</p>
                <p><strong>Телефон: <a href="tel:@GetPhoneNumber()">@GetPhoneNumber()</a></strong></p>
                <p><strong>Местоположение: </strong>@GetLocation()</p>
                <p><strong>Описание: </strong><br/>@Html.Raw(Model.Description)</p>
            </div>
        </div>
        <div class="take-issue-btn" style="" align="center">
            <form action="@Url.Action("TakeIssue", "Issues", new { id = Model.Id })" method="post">
                <button type="submit" class="custom-button">В работу</button>
            </form>
        </div>
    </div>
</section>

@foreach (var t in Model.Journals)
{
    @if (!string.IsNullOrEmpty(t.Notes))
    {
        <blockquote class="speech-bubble">
          <p>@Html.Raw(t.Notes)</p>
            <cite>@t.User.Name / @t.CreatedOn.ToString()</cite>
        </blockquote>
    }
}
<br/><br/>

@functions{

    private string GetStatusColor()
    {
        var color = Model.Priority.Id switch
        {
            1 => "#2ad667",
            2 => "#3a63d9",
            3 => "#ff333",
            4 => "#b03a3e",
            _ => "#000000"
            };
        return color;
    }
    
    private string GetPhoneNumber()
    {
        var phone = "Не указан";
        foreach (var t in Model.CustomFields)
        {
            if (!t.Name.Equals("Телефон для связи")) continue;
            phone = t.Values[0].Info;
            break;
        }
        
        return phone;
    }
    private string GetLocation()
    {
        var location = "Не указано";
        foreach (var t in Model.CustomFields)
        {
            if (!t.Name.Equals("Местоположение")) continue;
            location = t.Values[0].Info;
            break;
        }
        
        return location;
    }
}

