
    <script src="~/js/tags.js"></script>
    
    <style>
        .hidden{display: none;}
    </style>
    @using Redmine.Net.Api.Types
    @model List<Redmine.Net.Api.Types.Issue>
    @{
        var Buildings = ViewData["Buildings"] as Dictionary<int, string>;
        var UniqueBuildings = ViewData["UniqueBuildings"] as List<IssueCustomField>;
        var IssueBuildings = ViewData["IssueBuildings"] as List<IssueCustomField>;
    }

    <h1 align="center">Мои задачи</h1>
    
    
    <!-- Кнопка для открытия модального окна -->
    <button id="openFilterPopup" class="filter-popup-btn">
        <img src="images/filter.png" width="40" alt="Filters"/>
    </button>
    
    <!-- Модальное окно -->
    
    <div id="filterPopup" class="filter-popup">
        
        <button class="button" id="all" data-filter="*">all <span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count.ToString()</span></button>
        <div class="dropdown dropend">
            <button class="button dropdown-toggle filter-btn" type="button" id="statusDropdown" data-bs-toggle="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Статус</button>
            <div class="dropdown-menu" aria-labelledby="statusDropdown">
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="status" data-filter=".pending"/> В ожидании<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Status.Id == 7).ToString()</span>
                    </label>
                </div>
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="status" data-filter=".in-work"/>В работе<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Status.Id == 2).ToString()</span>
                    </label>
                </div>
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="status" data-filter=".assigned"/>Назначена<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Status.Id == 14).ToString()</span>
                    </label>
                </div>
            </div>
        </div>
        <div class="dropdown dropend">
            <button class="button dropdown-toggle filter-btn" type="button" id="priorityDropdownButton" data-bs-toggle="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Приоритет</button>
            <div class="dropdown-menu" aria-labelledby="priorityDropdown">
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="priority" data-filter=".low"/>Низкий<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Priority.Id == 1).ToString()</span>
                    </label>
                </div>
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="priority" data-filter=".average"/>Средний<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Priority.Id == 2).ToString()</span>
                    </label>
                </div>
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="priority" data-filter=".high">Высокий<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Priority.Id == 3).ToString()</span>
                    </label>
                </div>
                <div class="dropdown-item">
                    <label>
                        <input type="checkbox" class="filter-checkbox d-none" data-group="priority" data-filter=".critical">Критический<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@Model.Count(i => i.Priority.Id == 4).ToString()</span>
                    </label>
                </div>
            </div>
        </div>
        <div class="dropdown dropend">
            <button class="button dropdown-toggle filter-btn" type="button" id="buildingDropdown" data-bs-toggle="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Объект</button>
            <div class="dropdown-menu" aria-labelledby="buildingDropdown">
                @foreach (var building in UniqueBuildings)
                {
                    <div class="dropdown-item">
                        <label>
                            <input type="checkbox" class="filter-checkbox d-none" data-group="building" data-filter=".@building.Values[0].Info">@Buildings[int.Parse(building.Values[0].Info)]<span class="bg-info text-white rounded-circle px-2 py-1 mx-2">@IssueBuildings.Count(i => i.Values[0].Info.Equals(building.Values[0].Info))</span>
                        </label>
                    </div>
                }
            </div>
        </div>

        <!-- Кнопка для закрытия модального окна -->
        <button id="closeFilterPopup" class="close-btn">Закрыть</button>
    </div>


    

    <section id="grid-container" class="wrapper transitions-enabled fluid masonry js-masonry grid">
        <div class="container">
            <div class="row ">
                @foreach (var issue in Model)
                {
                    var color = issue.Priority.Id switch
                    {
                        1 => "#23ec55",
                        2 => "#2d51c1",
                        3 => "#FF0000",
                        4 => "#9b2d30",
                        _ => "#000000"
                        };

                    <article class="col-12 col-md-6 col-lg-4 mb-4 @GetTags(issue)">
                        <a href="@Url.Action("Edit", "Issues", new { id = issue.Id })" class="text-white">
                            <div class="card text-white card-has-bg click-col">
                                <div class="card-img-overlay d-flex flex-column" style="background-color: @color">
                                    <div class="card-body">
                                        <small class="card-meta mb-2">@issue.Id.ToString()</small>
                                        <h6 class="card-title mt-0">@issue.Subject</h6>
                                        <small><i class="far fa-clock"></i>@issue.AssignedTo.Name</small>
                                    </div>
                                    <div class="card-footer d-flex justify-content-between">
                                        <div class="align-self-start">
                                            <h6 class="my-0 text-white d-block">Заявитель</h6>
                                            <small>@issue.Author.Name</small>
                                        </div>
                                        <div class="align-self-end">
                                            <h6 class="my-0 text-white d-block">Статус</h6>
                                            <small>@issue.Status.Name</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </article>
                }
            </div>
        </div>
    </section>

@functions{
    private string GetTags(Issue issue)
    {
        var building = "Нема";
        foreach (var cf in issue.CustomFields)
        {
            if (!cf.Name.Equals("Объект Фонда")) continue;
            building = cf.Values[0].Info;
            break;
        }
        var status = issue.Status.Id switch
        {
            2 => "in-work",
            7 => "pending",
            14 => "assigned",
            _ => ""
            };
        var priority = issue.Priority.Id switch{
            2 => "average",
            3 => "high",
            4 => "critical",
            _ => "low"
            };
        var result = $"{status} {priority} {building}";

        return result;
    }

}

